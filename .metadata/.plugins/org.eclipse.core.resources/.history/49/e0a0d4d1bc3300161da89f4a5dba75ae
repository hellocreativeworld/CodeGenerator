package inter;

import java.util.HashMap;
import java.util.LinkedList;
import java.io.*;
import CPP.Absyn.*;


public class Env {
	
	public static LinkedList<HashMap<String,  Val>> contexts = new LinkedList<>();  //idk if this Type her should be a Type form bnfc gen stuff or from my TypeCode Enum
	public static LinkedList<LinkedList> ContextStack = new LinkedList<>();
	
	/**
	 * Search through the contexts List hashmaps until the newest id type is found
	 * @param id the id of which we search the type 
	 * @return
	 */
	public static Val lookupVar(String id) {
		
			return null;
			
		}
	
	}
	
	
	public static Val lookupFun(String id) {//...idk if i need this before i have more than one function per programm to evalute 
		return null;
	}





	public static void addVar(String id_, Val val) {
	
	}

	/**
	 * String stuff
	 */
	
	
	public static TypeCode extractValue(String s){
		
		
	}
	
	public static void clearTable(){
		contexts.clear();
	}
	//....
}
